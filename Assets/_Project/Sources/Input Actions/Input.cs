//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Project/Sources/Input Actions/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Builder"",
            ""id"": ""af5054b9-6f79-4622-be63-25b870c9f3f7"",
            ""actions"": [
                {
                    ""name"": ""Accept"",
                    ""type"": ""Button"",
                    ""id"": ""6eca5e9c-caa2-43ba-a61f-4b4ec420401f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveCursor"",
                    ""type"": ""Value"",
                    ""id"": ""ac845e8e-6a4f-406c-a78a-e66f2457725a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""786f29c8-6ff3-48e5-bd71-91b1697a351c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Accept"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16cd6899-4a19-4174-ba50-7daf5ec48bec"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""MoveCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Move"",
            ""id"": ""ab36ddb2-8c95-4292-a42d-785ef7b2f719"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""8a033919-c839-4f37-9121-a7205030db0d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Axis"",
                    ""id"": ""e660f660-0e08-4f9d-bea5-7f0df412b716"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c05bfedf-8dee-4d71-a222-787c7cb9096e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6b9bacf7-3847-47ad-9682-b8643c745737"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7aff7dcc-b733-46f3-a3ad-939ef8d61cdc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cbc0436c-6c74-49da-a055-88c423690840"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Axis"",
                    ""id"": ""143cfa77-173d-49ba-b0ec-ed9150e8dda8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""74376411-4050-4bf6-84f6-30c70b0d014f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c671fd10-2daf-44ed-84bb-2982786c9d94"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""936ed6ef-3d10-4506-ac47-a13c617b1788"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""65ae9ba5-7a25-43b8-9d81-dd54cbf746eb"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Scaling"",
            ""id"": ""d1f6fbce-f0b8-48c2-89c9-4edf5ee5f70a"",
            ""actions"": [
                {
                    ""name"": ""Scroll Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""2c725124-01d8-4ee8-839b-b499e511ca49"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""436e9251-0174-4c1c-8232-f1327f0315e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decrease"",
                    ""type"": ""Button"",
                    ""id"": ""029b5387-ce4e-4389-a300-69b6669fafe8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Vector"",
                    ""id"": ""214b1c6a-a72e-467d-8c83-68282aaa883b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""efbdc6c9-71b2-491f-87b4-a80984f5ee8d"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Scroll Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6e4d4947-fda4-48c0-86c4-5f80ab5d0ad5"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Scroll Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard One Modifier"",
                    ""id"": ""c9d8e4f4-5553-4fad-ba60-8c5e09401c9e"",
                    ""path"": ""ButtonWithOneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""594c5547-d065-43c4-b499-ab223fe922d5"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Button"",
                    ""id"": ""36f41392-fe52-4a5f-899b-d8c1e9f96d24"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard One Modifier"",
                    ""id"": ""695759e7-0afb-4eca-8fa0-ec246eaf544b"",
                    ""path"": ""ButtonWithOneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decrease"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""9faac2f9-abdc-4e5b-9faf-541fd0bec134"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Decrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Button"",
                    ""id"": ""1aae3741-e8fc-4ab5-9349-3ee0d9b472b7"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Decrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Camera Rotation"",
            ""id"": ""5cfc2556-a475-430e-acb8-5c2edcc88494"",
            ""actions"": [
                {
                    ""name"": ""Rotation2D"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b79719b3-2f42-46ba-87b8-db6cb5b422dc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reset2DRotation"",
                    ""type"": ""Button"",
                    ""id"": ""dde395af-c071-4a9f-ae2d-a54653212e52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetYAxisRotation"",
                    ""type"": ""Button"",
                    ""id"": ""a0a3db9b-5f85-4c89-8faf-cff37ac51671"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetXAxisRotation"",
                    ""type"": ""Button"",
                    ""id"": ""b56c0675-70ec-4083-a9b9-92b98eae00c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Axis"",
                    ""id"": ""4721d415-cd2b-4a20-a477-a294c60fca41"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6f2773ea-681a-40c0-b4b8-5f0e49884607"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0d603162-9fb9-4497-9447-89acdcfa0e2d"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b4609eca-85eb-4924-8a06-4739df63bc6c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""46b2921f-297a-4ec9-8010-7067ca668972"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""d868d4d3-400e-4a23-ada9-2aa135ef000c"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""16883fc8-4153-4532-bfc6-309d8fad5dcc"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a79ac42b-2480-427b-b103-7c247e264942"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),ScaleVector2(x=0.2,y=0.2)"",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Rotation2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""29ef0b79-c7f0-4ec2-9be8-fe9e660c4805"",
                    ""path"": ""<Keyboard>/home"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Reset2DRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""f99dd4c9-0733-41f4-9be6-b699a5c87b53"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetYAxisRotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""7654a91d-e95e-4dd2-8ac9-234ea862e9ec"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ResetYAxisRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""bdc754d1-9689-4776-83b2-125e00337ddd"",
                    ""path"": ""<Keyboard>/home"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ResetYAxisRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""ba8ad71e-0a9e-4f87-b93c-1d7f015ea345"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetXAxisRotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""b87becc1-b5ce-4dac-8a3e-3702351ab777"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ResetXAxisRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""7d05a3cf-c1b3-46c6-b0af-071f9930803f"",
                    ""path"": ""<Keyboard>/home"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""ResetXAxisRotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Other"",
            ""id"": ""b0452ccd-c1cc-42ce-865e-b25f074b912c"",
            ""actions"": [
                {
                    ""name"": ""Camera Inspection Mode"",
                    ""type"": ""Button"",
                    ""id"": ""9ad96ddf-7744-479d-aa39-3ad926367616"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""45bfa014-c2a5-43f4-8f62-13cdafb3ec14"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Inspection Mode"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""9fc589c4-d13e-4819-833a-c926caa19fe0"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Camera Inspection Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""718d7fdc-5486-4b5e-943f-a197ea5ed797"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse & Keyboard"",
                    ""action"": ""Camera Inspection Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse & Keyboard"",
            ""bindingGroup"": ""Mouse & Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Builder
        m_Builder = asset.FindActionMap("Builder", throwIfNotFound: true);
        m_Builder_Accept = m_Builder.FindAction("Accept", throwIfNotFound: true);
        m_Builder_MoveCursor = m_Builder.FindAction("MoveCursor", throwIfNotFound: true);
        // Move
        m_Move = asset.FindActionMap("Move", throwIfNotFound: true);
        m_Move_Movement = m_Move.FindAction("Movement", throwIfNotFound: true);
        // Scaling
        m_Scaling = asset.FindActionMap("Scaling", throwIfNotFound: true);
        m_Scaling_ScrollZoom = m_Scaling.FindAction("Scroll Zoom", throwIfNotFound: true);
        m_Scaling_Zoom = m_Scaling.FindAction("Zoom", throwIfNotFound: true);
        m_Scaling_Decrease = m_Scaling.FindAction("Decrease", throwIfNotFound: true);
        // Camera Rotation
        m_CameraRotation = asset.FindActionMap("Camera Rotation", throwIfNotFound: true);
        m_CameraRotation_Rotation2D = m_CameraRotation.FindAction("Rotation2D", throwIfNotFound: true);
        m_CameraRotation_Reset2DRotation = m_CameraRotation.FindAction("Reset2DRotation", throwIfNotFound: true);
        m_CameraRotation_ResetYAxisRotation = m_CameraRotation.FindAction("ResetYAxisRotation", throwIfNotFound: true);
        m_CameraRotation_ResetXAxisRotation = m_CameraRotation.FindAction("ResetXAxisRotation", throwIfNotFound: true);
        // Other
        m_Other = asset.FindActionMap("Other", throwIfNotFound: true);
        m_Other_CameraInspectionMode = m_Other.FindAction("Camera Inspection Mode", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Builder
    private readonly InputActionMap m_Builder;
    private IBuilderActions m_BuilderActionsCallbackInterface;
    private readonly InputAction m_Builder_Accept;
    private readonly InputAction m_Builder_MoveCursor;
    public struct BuilderActions
    {
        private @Input m_Wrapper;
        public BuilderActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accept => m_Wrapper.m_Builder_Accept;
        public InputAction @MoveCursor => m_Wrapper.m_Builder_MoveCursor;
        public InputActionMap Get() { return m_Wrapper.m_Builder; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuilderActions set) { return set.Get(); }
        public void SetCallbacks(IBuilderActions instance)
        {
            if (m_Wrapper.m_BuilderActionsCallbackInterface != null)
            {
                @Accept.started -= m_Wrapper.m_BuilderActionsCallbackInterface.OnAccept;
                @Accept.performed -= m_Wrapper.m_BuilderActionsCallbackInterface.OnAccept;
                @Accept.canceled -= m_Wrapper.m_BuilderActionsCallbackInterface.OnAccept;
                @MoveCursor.started -= m_Wrapper.m_BuilderActionsCallbackInterface.OnMoveCursor;
                @MoveCursor.performed -= m_Wrapper.m_BuilderActionsCallbackInterface.OnMoveCursor;
                @MoveCursor.canceled -= m_Wrapper.m_BuilderActionsCallbackInterface.OnMoveCursor;
            }
            m_Wrapper.m_BuilderActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Accept.started += instance.OnAccept;
                @Accept.performed += instance.OnAccept;
                @Accept.canceled += instance.OnAccept;
                @MoveCursor.started += instance.OnMoveCursor;
                @MoveCursor.performed += instance.OnMoveCursor;
                @MoveCursor.canceled += instance.OnMoveCursor;
            }
        }
    }
    public BuilderActions @Builder => new BuilderActions(this);

    // Move
    private readonly InputActionMap m_Move;
    private IMoveActions m_MoveActionsCallbackInterface;
    private readonly InputAction m_Move_Movement;
    public struct MoveActions
    {
        private @Input m_Wrapper;
        public MoveActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Move_Movement;
        public InputActionMap Get() { return m_Wrapper.m_Move; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoveActions set) { return set.Get(); }
        public void SetCallbacks(IMoveActions instance)
        {
            if (m_Wrapper.m_MoveActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_MoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public MoveActions @Move => new MoveActions(this);

    // Scaling
    private readonly InputActionMap m_Scaling;
    private IScalingActions m_ScalingActionsCallbackInterface;
    private readonly InputAction m_Scaling_ScrollZoom;
    private readonly InputAction m_Scaling_Zoom;
    private readonly InputAction m_Scaling_Decrease;
    public struct ScalingActions
    {
        private @Input m_Wrapper;
        public ScalingActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @ScrollZoom => m_Wrapper.m_Scaling_ScrollZoom;
        public InputAction @Zoom => m_Wrapper.m_Scaling_Zoom;
        public InputAction @Decrease => m_Wrapper.m_Scaling_Decrease;
        public InputActionMap Get() { return m_Wrapper.m_Scaling; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ScalingActions set) { return set.Get(); }
        public void SetCallbacks(IScalingActions instance)
        {
            if (m_Wrapper.m_ScalingActionsCallbackInterface != null)
            {
                @ScrollZoom.started -= m_Wrapper.m_ScalingActionsCallbackInterface.OnScrollZoom;
                @ScrollZoom.performed -= m_Wrapper.m_ScalingActionsCallbackInterface.OnScrollZoom;
                @ScrollZoom.canceled -= m_Wrapper.m_ScalingActionsCallbackInterface.OnScrollZoom;
                @Zoom.started -= m_Wrapper.m_ScalingActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_ScalingActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_ScalingActionsCallbackInterface.OnZoom;
                @Decrease.started -= m_Wrapper.m_ScalingActionsCallbackInterface.OnDecrease;
                @Decrease.performed -= m_Wrapper.m_ScalingActionsCallbackInterface.OnDecrease;
                @Decrease.canceled -= m_Wrapper.m_ScalingActionsCallbackInterface.OnDecrease;
            }
            m_Wrapper.m_ScalingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ScrollZoom.started += instance.OnScrollZoom;
                @ScrollZoom.performed += instance.OnScrollZoom;
                @ScrollZoom.canceled += instance.OnScrollZoom;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Decrease.started += instance.OnDecrease;
                @Decrease.performed += instance.OnDecrease;
                @Decrease.canceled += instance.OnDecrease;
            }
        }
    }
    public ScalingActions @Scaling => new ScalingActions(this);

    // Camera Rotation
    private readonly InputActionMap m_CameraRotation;
    private ICameraRotationActions m_CameraRotationActionsCallbackInterface;
    private readonly InputAction m_CameraRotation_Rotation2D;
    private readonly InputAction m_CameraRotation_Reset2DRotation;
    private readonly InputAction m_CameraRotation_ResetYAxisRotation;
    private readonly InputAction m_CameraRotation_ResetXAxisRotation;
    public struct CameraRotationActions
    {
        private @Input m_Wrapper;
        public CameraRotationActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotation2D => m_Wrapper.m_CameraRotation_Rotation2D;
        public InputAction @Reset2DRotation => m_Wrapper.m_CameraRotation_Reset2DRotation;
        public InputAction @ResetYAxisRotation => m_Wrapper.m_CameraRotation_ResetYAxisRotation;
        public InputAction @ResetXAxisRotation => m_Wrapper.m_CameraRotation_ResetXAxisRotation;
        public InputActionMap Get() { return m_Wrapper.m_CameraRotation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraRotationActions set) { return set.Get(); }
        public void SetCallbacks(ICameraRotationActions instance)
        {
            if (m_Wrapper.m_CameraRotationActionsCallbackInterface != null)
            {
                @Rotation2D.started -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnRotation2D;
                @Rotation2D.performed -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnRotation2D;
                @Rotation2D.canceled -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnRotation2D;
                @Reset2DRotation.started -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnReset2DRotation;
                @Reset2DRotation.performed -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnReset2DRotation;
                @Reset2DRotation.canceled -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnReset2DRotation;
                @ResetYAxisRotation.started -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetYAxisRotation;
                @ResetYAxisRotation.performed -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetYAxisRotation;
                @ResetYAxisRotation.canceled -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetYAxisRotation;
                @ResetXAxisRotation.started -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetXAxisRotation;
                @ResetXAxisRotation.performed -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetXAxisRotation;
                @ResetXAxisRotation.canceled -= m_Wrapper.m_CameraRotationActionsCallbackInterface.OnResetXAxisRotation;
            }
            m_Wrapper.m_CameraRotationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotation2D.started += instance.OnRotation2D;
                @Rotation2D.performed += instance.OnRotation2D;
                @Rotation2D.canceled += instance.OnRotation2D;
                @Reset2DRotation.started += instance.OnReset2DRotation;
                @Reset2DRotation.performed += instance.OnReset2DRotation;
                @Reset2DRotation.canceled += instance.OnReset2DRotation;
                @ResetYAxisRotation.started += instance.OnResetYAxisRotation;
                @ResetYAxisRotation.performed += instance.OnResetYAxisRotation;
                @ResetYAxisRotation.canceled += instance.OnResetYAxisRotation;
                @ResetXAxisRotation.started += instance.OnResetXAxisRotation;
                @ResetXAxisRotation.performed += instance.OnResetXAxisRotation;
                @ResetXAxisRotation.canceled += instance.OnResetXAxisRotation;
            }
        }
    }
    public CameraRotationActions @CameraRotation => new CameraRotationActions(this);

    // Other
    private readonly InputActionMap m_Other;
    private IOtherActions m_OtherActionsCallbackInterface;
    private readonly InputAction m_Other_CameraInspectionMode;
    public struct OtherActions
    {
        private @Input m_Wrapper;
        public OtherActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraInspectionMode => m_Wrapper.m_Other_CameraInspectionMode;
        public InputActionMap Get() { return m_Wrapper.m_Other; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OtherActions set) { return set.Get(); }
        public void SetCallbacks(IOtherActions instance)
        {
            if (m_Wrapper.m_OtherActionsCallbackInterface != null)
            {
                @CameraInspectionMode.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnCameraInspectionMode;
                @CameraInspectionMode.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnCameraInspectionMode;
                @CameraInspectionMode.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnCameraInspectionMode;
            }
            m_Wrapper.m_OtherActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CameraInspectionMode.started += instance.OnCameraInspectionMode;
                @CameraInspectionMode.performed += instance.OnCameraInspectionMode;
                @CameraInspectionMode.canceled += instance.OnCameraInspectionMode;
            }
        }
    }
    public OtherActions @Other => new OtherActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse & Keyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    public interface IBuilderActions
    {
        void OnAccept(InputAction.CallbackContext context);
        void OnMoveCursor(InputAction.CallbackContext context);
    }
    public interface IMoveActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IScalingActions
    {
        void OnScrollZoom(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnDecrease(InputAction.CallbackContext context);
    }
    public interface ICameraRotationActions
    {
        void OnRotation2D(InputAction.CallbackContext context);
        void OnReset2DRotation(InputAction.CallbackContext context);
        void OnResetYAxisRotation(InputAction.CallbackContext context);
        void OnResetXAxisRotation(InputAction.CallbackContext context);
    }
    public interface IOtherActions
    {
        void OnCameraInspectionMode(InputAction.CallbackContext context);
    }
}
